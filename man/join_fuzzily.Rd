% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/join.R
\name{join_fuzzily}
\alias{join_fuzzily}
\title{Join two \code{data.frame}s using fuzzy string matching.}
\usage{
join_fuzzily(x, y, mode = "inner", max_dist = 0, ...,
  by = intersect(names(x), names(y)), copy = FALSE, suffix = c("_x",
  "_y"))
}
\arguments{
\item{x}{A tbl}

\item{y}{A tbl}

\item{mode}{One of "inner", "left", "right", "full" "semi", or "anti"}

\item{max_dist}{Maximum distance to use for joining}

\item{...}{Arguments passed on to \code{\link{stringdist}}}

\item{by}{Columns by which to join the two tables}

\item{copy}{If \code{x} and \code{y} are not from the same data source,
and \code{copy} is \code{TRUE}, then \code{y} will be copied into the
same src as \code{x}.  This allows you to join tables across srcs, but
it is a potentially expensive operation so you must opt into it.}

\item{suffix}{If there are non-joined duplicate variables in \code{x} and
\code{y}, these suffixes will be added to the output to disambiguate them.
Should be a character vector of length 2.}
}
\value{
A \link[tibble:tibble-package]{tibble}.
}
\description{
Join two \code{data.frame}s using fuzzy string matching.
}
\details{
This function is effectively a customized version of the \code{stringdist_join}
functions in the \code{{fuzzyjoin}} package.
Additionally, this function is primarily intended to be uzed before \code{tetidy::summarise_join_stats()}
with \code{mode = "full"}.
}
\seealso{
\code{\link[dplyr:inner_join]{dplyr::inner_join()}}
}
